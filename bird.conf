include "/etc/bird/vars.conf";
include "/etc/bird/functions/neighbor.conf";
# Internal Community:
#  (MY_COMMUNITY,<999, 0) Community for all my node
#  (MY_COMMUNITY,<999, 1) Community only for this node
#  (MY_COMMUNITY,   1,*)   do not send to ibgp
#  (MY_COMMUNITY,   2,*)   do not send to ebgp
#  (MY_COMMUNITY,   3,*)   do not send to kernel
#  (MY_COMMUNITY, 101,*)   allow bgp_local_perf
#  (MY_COMMUNITY, 201,*)   transit routes
#  (MY_COMMUNITY, 202,*)   peer routes
#  (MY_COMMUNITY, 203,*)   customer routes
#  (MY_COMMUNITY, 204,*)   ibgp routes

# Control Community:
#  (MY_COMMUNITY,100_,*)   do not send to
#  (MY_COMMUNITY,101_,*)   prepend 1 to
#  (MY_COMMUNITY,102_,*)   prepend 2 to
#  (MY_COMMUNITY,104_,*)   prepend 4 to
#  (MY_COMMUNITY,108_,*)   prepend 8 to
#  (MY_COMMUNITY,10_1,0)   Do action to everyone
#  (MY_COMMUNITY,10_1,asn) Don't do action to this one
#  (MY_COMMUNITY,10_2,asn) Do action to this one

# Informational Community
#  (MY_COMMUNITY,5000,country_code)  Received from country
#  (MY_COMMUNITY,5001,region_code)   Received from region

protocol device {
    scan time 10;
}

protocol kernel {
    scan time 20;
    learn on;
    ipv6 {
        import none;
        export filter {
            krt_prefsrc = OWNIPv6;
            if bgp_large_community ~ [(MY_COMMUNITY, 3,*)] then reject;
            kernel_route_hack();
            accept;
        };
    };
};






protocol static static_bkbn {
    route OWNNETv6_bkbn unreachable;

    ipv6 {
        import filter {
            bgp_large_community.add((MY_COMMUNITY,203,0));# customer
            accept;
        };
        export none;
    };
}

protocol static static_ospf {
    route OWNNETv6_ospf unreachable;
    ipv6 {
        import filter {
            bgp_large_community.add((MY_COMMUNITY,1000,0));
            accept;
        };
        export none;
    };
}


template bgp pubebgp {
    local as OWNAS;
    path metric 1;
    interpret communities on;
    allow local as 1;

    ipv6 {
        import none;
        export none;
        import limit 10000000 action block;
        export limit 100 action block;
    };
};

template bgp pubibgp {
    local as OWNAS;
    path metric 1;
    interpret communities off;
    allow local as 1;

    ipv6 {
        next hop self yes;
        add paths rx;
        import where ibgp_import();
        export where ibgp_export();
        import limit 10000000 action block;
    };
};

include "peers/*.conf";
include "static/*.conf";
include "ospf.conf";
include "rr.conf";
