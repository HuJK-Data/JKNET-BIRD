include "/etc/bird/vars.conf";
include "/etc/bird/functions/neighbor.conf";

protocol device {
    scan time 10;
}

protocol kernel {
    scan time 20;
    learn on;
    ipv6 {
        import none;
        export filter {
            if net ~ allowed_prefix_v6 then {
                krt_prefsrc = OWNIPv6_kernel;
            }
            if bgp_large_community ~ [(MY_COMMUNITY, 3,*)] then reject;
            if bgp_large_community ~ [(MY_COMMUNITY, 4,*)] then dest = RTD_UNREACHABLE;
            kernel_route_hack();
            accept;
        };
    };
};

protocol static static_bkbn {
    route OWNNETv6_bkbn unreachable;

    ipv6 {
        import filter {
            bgp_large_community.add((MY_COMMUNITY,203,0));# customer
            accept;
        };
        export none;
    };
}

protocol static static_ospf {
    route OWNNETv6_ospf unreachable;
    ipv6 {
        import filter {
            bgp_large_community.add((MY_COMMUNITY,1000,0));
            bgp_large_community.add((MY_COMMUNITY,1,0));    # do not send to ibgp
            accept;
        };
        export none;
    };
}


template bgp pubebgp {
    local as OWNAS;
    path metric 1;
    interpret communities on;
    enforce first as on;
    allow local as 1;

    ipv6 {
        import none;
        export none;
        import keep filtered on;
        import limit 999 action block;
        export limit 999 action block;
    };
};

template bgp pubibgp {
    local as OWNAS;
    path metric 1;
    interpret communities off;
    allow local as 1;

    ipv6 {
        next hop self yes;
        add paths rx;
        import where rr_import();
        export where rr_export();
        import limit 10000000 action block;
    };
};

include "static/*.conf";
include "ospf.conf";
include "rr.conf";
include "peers/down_prefix/*.conf";
include "peers/*.conf";
