roa4 table rpki_1_table4;
roa6 table rpki_1_table6;
protocol rpki rpki_1
{
    roa4 { table rpki_1_table4; };
    roa6 { table rpki_1_table6; };
    remote 203.119.3.3 port 323;
    retry 300;
}

roa4 table rpki_2_table4;
roa6 table rpki_2_table6;
protocol rpki rpki_2
{
    roa4 { table rpki_2_table4; };
    roa6 { table rpki_2_table6; };
    remote 182.173.1.1 port 323;
    retry 300;
}

roa4 table rpki_3_table4;
roa6 table rpki_3_table6;
protocol rpki rpki_3
{
    roa4 { table rpki_3_table4; };
    roa6 { table rpki_3_table6; };
    remote "rtr.rpki.cloudflare.com" port 8282;
    retry 300;
}

function make_unreachable(){
    bgp_large_community.add((PUB_COMMUNITY,4,0));
    bgp_large_community.add((PUB_COMMUNITY,2,0)); # do not send to anyone
}


function do_rpki_check()
int last_asn;
{
    if bgp_path.len > 0 then{
        last_asn = bgp_path.last_nonaggregated;
    } else {
        last_asn = PUB_MYASN;
    }
    if net.type = NET_IP4 then {
        if(roa_check(rpki_1_table4, net, last_asn) = ROA_INVALID) then reject;
        if(roa_check(rpki_2_table4, net, last_asn) = ROA_INVALID) then reject;
        if(roa_check(rpki_3_table4, net, last_asn) = ROA_INVALID) then reject;
    }
    else if net.type = NET_IP6 then {
        if(roa_check(rpki_1_table6, net, last_asn) = ROA_INVALID) then reject;
        if(roa_check(rpki_2_table6, net, last_asn) = ROA_INVALID) then reject;
        if(roa_check(rpki_3_table6, net, last_asn) = ROA_INVALID) then reject;
    }
    return true;
}

