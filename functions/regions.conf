define R_ALL    = [(PUB_COMMUNITY, 10000, *)];

define R_EU     = (PUB_COMMUNITY, 10000, 41); # Europe
define R_NA_E   = (PUB_COMMUNITY, 10000, 42); # North America-E
define R_NA_C   = (PUB_COMMUNITY, 10000, 43); # North America-C
define R_NA_W   = (PUB_COMMUNITY, 10000, 44); # North America-W
define R_CA     = (PUB_COMMUNITY, 10000, 45); # Central America
define R_SA_E   = (PUB_COMMUNITY, 10000, 46); # South America-E
define R_SA_W   = (PUB_COMMUNITY, 10000, 47); # South America-W
define R_AFR_N  = (PUB_COMMUNITY, 10000, 48); # Africa-N (above Sahara)
define R_AFR_S  = (PUB_COMMUNITY, 10000, 49); # Africa-S (below Sahara)
define R_ASIA_S = (PUB_COMMUNITY, 10000, 50); # Asia-S (IN,PK,BD)
define R_ASIA_SE= (PUB_COMMUNITY, 10000, 51); # Asia-SE (TH,SG,PH,ID,MY)
define R_ASIA_E = (PUB_COMMUNITY, 10000, 52); # Asia-E (JP,CN,KR)
define R_PO     = (PUB_COMMUNITY, 10000, 53); # Pacific&Oceania (AU,NZ,FJ)
define R_AQ     = (PUB_COMMUNITY, 10000, 54); # Antarctica
define R_ASIA_N = (PUB_COMMUNITY, 10000, 55); # Asia-N (RU)
define R_ASIA_W = (PUB_COMMUNITY, 10000, 56); # Asia-W (IR,TR,UAE)
define R_ASIA_C = (PUB_COMMUNITY, 10000, 57); # Central Asia (AF,UZ,KZ)


define C_ALL = [(PUB_COMMUNITY, 10001, *)];

#R_ASIA_E
define C_TW = (PUB_COMMUNITY, 10001, 158);
define C_CN = (PUB_COMMUNITY, 10001, 156);
define C_HK = (PUB_COMMUNITY, 10001, 344);
define C_JP = (PUB_COMMUNITY, 10001, 392);
define C_KR = (PUB_COMMUNITY, 10001, 410);

#R_ASIA_SE
define C_SG = (PUB_COMMUNITY, 10001, 702);

#R_ASIA_N
define C_RU = (PUB_COMMUNITY, 10001, 643);

#R_ASIA_S
define C_IN = (PUB_COMMUNITY, 10001, 356);

#R_NA_X
define C_US = (PUB_COMMUNITY, 10001, 840);
define C_CA = (PUB_COMMUNITY, 10001, 124);

#R_SA
define C_BR = (PUB_COMMUNITY, 10001, 076);

#R_EU
define C_DE = (PUB_COMMUNITY, 10001, 276);
define C_NL = (PUB_COMMUNITY, 10001, 528);
define C_CH = (PUB_COMMUNITY, 10001, 756);
define C_FR = (PUB_COMMUNITY, 10001, 250);

# bgp_path ~ t1_asns
# · t1_asns this_node       = 120
# · t1_asns PUB_COUNTRY     = 120
# · t1_asns PUB_REGION      = 120
# · t1_asns other           = 100
# 201
# · transit this_node       = 150
# · transit PUB_COUNTRY     = 130
# · transit PUB_REGION      = 120
# · transit other           = 100
# 202
# · ixrs this_node          = 180
# · ixrs PUB_COUNTRY        = 170
# · ixrs PUB_REGION         = 160
# · ixrs other              = 140
# 203
# · peer this_node          = 200
# · peer PUB_COUNTRY        = 190
# · peer PUB_REGION         = 180
# · peer other              = 140
# 204
# · downstream this_node    = 300
# · downstream PUB_COUNTRY  = 280
# · downstream PUB_REGION   = 260
# · downstream other        = 110


function set_pref(){
    if bgp_large_community ~ [(PUB_COMMUNITY, 101, *)] then return true; # Implement (asn,101,*) keep local_perf
    if bgp_path ~ t1_asns then {
        if (PUB_COMMUNITY, 10001, PUB_COUNTRY) ~ bgp_large_community then {
            bgp_local_pref=120;
        } else if (PUB_COMMUNITY, 10000, PUB_REGION) ~ bgp_large_community then {
            bgp_local_pref=120;
        } else {
            bgp_local_pref=100;
        }
    } else if bgp_large_community ~ [(PUB_COMMUNITY,  201,*)] then {
        if ((PUB_COMMUNITY, 10001, PUB_COUNTRY) ~ bgp_large_community && (PUB_COMMUNITY, 10000, PUB_REGION) ~ bgp_large_community) then {
            bgp_local_pref=150;
        } else if (PUB_COMMUNITY, 10001, PUB_COUNTRY) ~ bgp_large_community then {
            bgp_local_pref=130;
        } else if (PUB_COMMUNITY, 10000, PUB_REGION) ~ bgp_large_community then {
            bgp_local_pref=120;
        } else {
            bgp_local_pref=100;
        }
    } else if bgp_large_community ~ [(PUB_COMMUNITY,  202,*)] then {
        if ((PUB_COMMUNITY, 10001, PUB_COUNTRY) ~ bgp_large_community && (PUB_COMMUNITY, 10000, PUB_REGION) ~ bgp_large_community) then {
            bgp_local_pref=180;
        } else if (PUB_COMMUNITY, 10001, PUB_COUNTRY) ~ bgp_large_community then {
            bgp_local_pref=170;
        } else if (PUB_COMMUNITY, 10000, PUB_REGION) ~ bgp_large_community then {
            bgp_local_pref=160;
        } else {
            bgp_local_pref=140;
        }
    } else if bgp_large_community ~ [(PUB_COMMUNITY,  203,*)] then {
        if ((PUB_COMMUNITY, 10001, PUB_COUNTRY) ~ bgp_large_community && (PUB_COMMUNITY, 10000, PUB_REGION) ~ bgp_large_community) then {
            bgp_local_pref=200;
        } else if (PUB_COMMUNITY, 10001, PUB_COUNTRY) ~ bgp_large_community then {
            bgp_local_pref=190;
        } else if (PUB_COMMUNITY, 10000, PUB_REGION) ~ bgp_large_community then {
            bgp_local_pref=180;
        } else {
            bgp_local_pref=140;
        }
    } else if bgp_large_community ~ [(PUB_COMMUNITY,  204,*)] then {
        if ((PUB_COMMUNITY, 10001, PUB_COUNTRY) ~ bgp_large_community && (PUB_COMMUNITY, 10000, PUB_REGION) ~ bgp_large_community) then {
            bgp_local_pref=300;
        } else if (PUB_COMMUNITY, 10001, PUB_COUNTRY) ~ bgp_large_community then {
            bgp_local_pref=280;
        } else if (PUB_COMMUNITY, 10000, PUB_REGION) ~ bgp_large_community then {
            bgp_local_pref=260;
        } else {
            bgp_local_pref=110;
        }
    }
}
